/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.sql.SQLException;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.net.ssl.HttpsURLConnection;
import static org.apache.http.HttpHeaders.USER_AGENT;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author trana
 */
public class chooseEvent extends javax.swing.JPanel {
    private GUI.mainForm mf;
    /**
     * Creates new form chooseEvent
     */
    public chooseEvent() {
        initComponents();        
    }   
    
    public void setMF(GUI.mainForm mf){
        this.mf = mf;
    }
    
    public void loadData(){
        try {
            jPanel1.removeAll();
            //add button
            String listEventStr = getEventList();
            JSONParser parser = new JSONParser();
            Object obj = parser.parse(listEventStr);
            JSONArray listEvent = (JSONArray) obj;
            
            Iterator<JSONObject> array = listEvent.iterator();
            while (array.hasNext()) {
                obj = parser.parse(array.next().toJSONString());
                JSONObject event = (JSONObject) obj;
                add_btn_sk((String)event.get("id"),(String)event.get("name"),(String) event.get("timeStart"),(String) event.get("timeEnd"));
            }
            jPanel1.repaint();
        } catch (Exception ex) {
            Logger.getLogger(chooseEvent.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void add_btn_sk(String id, String name, String startTime, String endTime){
//        id : mã sự kiện
//        name : tên sự kiện
//        startTime : thời gian bắt đầu
//        endTime: thời gian kết thúc
        
        javax.swing.JButton sk = new javax.swing.JButton();
        
        //set properties
        sk.setBackground(new Color(51,153,255));
        sk.setForeground(Color.white);
        
        //set text         
        sk.setText("<html> <center style='weight:400px'><b style='font-size:20'>"+name+"</b><br> <p>từ "+startTime+" đến "+endTime+"</p></center> </html>");
        
        //add listener
        sk.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    mf.setEvent(name, id);
                    mf.changeUIToAttendance();
                    
                    module.Database db = new module.Database();
                    db.update("UPDATE `setting` SET `value` = '"+id+"' WHERE `id` = 1");                   
                    System.out.println(name);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(chooseEvent.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(chooseEvent.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
        
        //add panel
        jPanel1.add(sk); 
    }
    
    private String getEventList() throws Exception {

		String url = "http://localhost/nckh/IoT_Embedded/Client/Webservices/source/getEvent.php"; // URL Webservices
                module.Post post = new module.Post();
                return post.send(url, "");
	}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(430, 290));
        setPreferredSize(new java.awt.Dimension(430, 290));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Choose Event");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
